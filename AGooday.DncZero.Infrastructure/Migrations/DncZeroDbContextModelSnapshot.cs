// <auto-generated />
using System;
using AGooday.DncZero.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AGooday.DncZero.Infrastructure.Migrations
{
    [DbContext(typeof(DncZeroDbContext))]
    partial class DncZeroDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.DataLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataType");

                    b.Property<string>("Entity");

                    b.Property<string>("EntityKey");

                    b.Property<string>("EntityName");

                    b.Property<string>("Field");

                    b.Property<string>("FieldName");

                    b.Property<string>("Name");

                    b.Property<string>("NewValue");

                    b.Property<Guid>("OperateLogId");

                    b.Property<string>("OperateType");

                    b.Property<string>("OriginalValue");

                    b.HasKey("Id");

                    b.ToTable("DataLogs");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.Functions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Action");

                    b.Property<string>("Area");

                    b.Property<string>("Code");

                    b.Property<string>("Controller");

                    b.Property<Guid>("CreatedByUserId");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Description");

                    b.Property<string>("Icon");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("MenuId");

                    b.Property<Guid?>("MenusId");

                    b.Property<Guid>("ModifiedByUserId");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.Property<long?>("Sort");

                    b.Property<int>("Status");

                    b.Property<int>("Type");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("MenusId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.GroupRoleRelation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("GroupId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("GroupRoleRelation");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.Groups", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<Guid?>("ParentId");

                    b.Property<long?>("Sort");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.Menus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("Action");

                    b.Property<string>("Alias");

                    b.Property<Guid>("Area");

                    b.Property<string>("BeforeCloseFun");

                    b.Property<Guid>("Controller");

                    b.Property<Guid>("CreatedByUserId");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Description");

                    b.Property<string>("HideInMenu");

                    b.Property<string>("Icon");

                    b.Property<bool>("IsCache");

                    b.Property<bool>("IsDefaultRouter");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("ModifiedByUserId");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.Property<Guid?>("ParentId");

                    b.Property<long?>("Sort");

                    b.Property<int>("Status");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.OperateLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("IP");

                    b.Property<string>("Name");

                    b.Property<string>("Operator");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("OperateLogs");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.Permissions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<Guid>("ResourceId");

                    b.Property<int>("ResourceType");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.RolePermissionRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("PermissionId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("RolePermissionRelation");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedByUserId");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("LastModifiedByUserId");

                    b.Property<DateTime>("LastModifiedTime");

                    b.Property<string>("Name");

                    b.Property<Guid>("ParentId");

                    b.Property<long?>("Sort");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.UserAuths", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AuthTime");

                    b.Property<string>("Credential");

                    b.Property<string>("Identifier");

                    b.Property<string>("IdentityType");

                    b.Property<DateTime>("LastModifiedTime");

                    b.Property<int>("State");

                    b.Property<Guid>("UserId");

                    b.Property<Guid?>("UsersId");

                    b.Property<bool>("Verified");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("UserAuths");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.UserGroupRelation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("GroupId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserGroupRelation");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.UserPermissionRelation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("PermissionId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserPermissionRelation");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.UserRoleRelation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRoleRelation");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<int?>("Age");

                    b.Property<string>("Avatar");

                    b.Property<string>("Bio");

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("Blog");

                    b.Property<string>("Company");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Gravatar");

                    b.Property<string>("Idcard");

                    b.Property<bool>("IsSuperMan");

                    b.Property<string>("LastLoginIp");

                    b.Property<DateTime>("LastLoginTime");

                    b.Property<string>("LastModifiedIp");

                    b.Property<DateTime>("LastModifiedTime");

                    b.Property<string>("Major");

                    b.Property<string>("Motto");

                    b.Property<Guid?>("MtypeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("NowState");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Polity");

                    b.Property<string>("RealName");

                    b.Property<string>("RegisterIp");

                    b.Property<DateTime>("RegisterTime");

                    b.Property<int?>("Sex");

                    b.Property<long?>("Sort");

                    b.Property<int?>("State");

                    b.Property<string>("Surname");

                    b.Property<int>("Type");

                    b.Property<string>("Url");

                    b.Property<string>("Website");

                    b.Property<string>("Weibo");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.Functions", b =>
                {
                    b.HasOne("AGooday.DncZero.Domain.Models.Menus")
                        .WithMany("Functions")
                        .HasForeignKey("MenusId");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.UserAuths", b =>
                {
                    b.HasOne("AGooday.DncZero.Domain.Models.Users")
                        .WithMany("UserAuths")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("AGooday.DncZero.Domain.Models.Users", b =>
                {
                    b.OwnsOne("AGooday.DncZero.Domain.Models.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("UsersId");

                            b1.Property<string>("City");

                            b1.Property<string>("County");

                            b1.Property<string>("Detailed");

                            b1.Property<string>("Province");

                            b1.Property<string>("Street");

                            b1.HasKey("UsersId");

                            b1.ToTable("Users");

                            b1.HasOne("AGooday.DncZero.Domain.Models.Users")
                                .WithOne("Address")
                                .HasForeignKey("AGooday.DncZero.Domain.Models.Address", "UsersId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
